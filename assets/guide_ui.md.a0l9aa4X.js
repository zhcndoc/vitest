import{_ as e,i as a,o as l,ar as s,j as t,aS as n,aT as h}from"./chunks/framework.lk4jPI36.js";const b=JSON.parse('{"title":"Vitest UI | 指南","description":"","frontmatter":{"title":"Vitest UI | 指南"},"headers":[],"relativePath":"guide/ui.md","filePath":"guide/ui.md","lastUpdated":1758986088000}'),p={name:"guide/ui.md"};function d(k,i,o,c,r,g){return l(),a("div",null,i[0]||(i[0]=[s('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/ui.md for this page in Markdown format</div><h1 id="vitest-ui" tabindex="-1">Vitest UI <a class="header-anchor" href="#vitest-ui" aria-label="Permalink to “Vitest UI”">​</a></h1><p>Vitest 由 Vite 提供能力，在运行测试时有一个开发服务器。这允许 Vitest 提供一个漂亮的 UI 界面来查看并与测试交互。Vitest 的 UI 界面是可选的，你可以通过以下安装：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @vitest/ui</span></span></code></pre></div><p>接下来，你可以通过传入 <code>--ui</code> 参数来启动测试的 UI 界面：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vitest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ui</span></span></code></pre></div><p>最后，你可以访问 Vitest UI 界面，通过 <a href="http://localhost:51204/__vitest__/"><code>http://localhost:51204/__vitest__/</code></a></p><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>UI 是交互式的，需要一个正在运行的 Vite 服务器，因此请确保在 <code>watch</code> 模式（默认模式）下运行 Vitest。或者，你可以通过在配置的 <code>reporters</code> 选项中指定 <code>html</code> 来生成一个与 Vitest UI 完全相同的静态 HTML 报告。</p></div>',8),t("img",{alt:"Vitest UI","img-light":"",src:n},null,-1),t("img",{alt:"Vitest UI","img-dark":"",src:h},null,-1),s(`<p>UI 也可以用作测试报告器。 在 Vitest 配置中使用 <code>&#39;html&#39;</code> 报告器生成 HTML 输出并预览测试结果：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vitest.config.ts">vitest.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    reporters: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><p>你可以在 Vitest UI 中查看覆盖率报告：查看 <a href="/guide/coverage.html#vitest-ui">Vitest UI 覆盖率</a> 了解更多详情。</p><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>如果你仍想在终端中实时查看测试的运行情况，请不要忘记将 <code>default</code> 报告器添加到 <code>reporters</code> 选项：<code>[&#39;default&#39;, &#39;html&#39;]</code>。</p></div><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>要预览你的 HTML 报告，可以使用 <a href="https://vitejs.dev/guide/cli.html#vite-preview" target="_blank" rel="noreferrer">vite preview</a> 命令：</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preview</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --outDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./html</span></span></code></pre></div><p>你可以使用 <a href="/config/#outputfile"><code>outputFile</code></a> 配置选项配置输出。你需要在那里指定 <code>.html</code> 路径。例如，<code>./html/index.html</code> 是默认值。</p></div>`,5)]))}const m=e(p,[["render",d]]);export{b as __pageData,m as default};
