import{_ as k,b as h,i as p,o as r,ar as E,g as l,j as s,w as n,M as i,aC as d,aD as g,aE as c,aF as o}from"./chunks/framework.lk4jPI36.js";const A=JSON.parse('{"title":"可视化回归测试","description":"","frontmatter":{"title":"可视化回归测试","outline":[2,3]},"headers":[],"relativePath":"guide/browser/visual-regression-testing.md","filePath":"guide/browser/visual-regression-testing.md","lastUpdated":1758986088000}'),y={name:"guide/browser/visual-regression-testing.md"};function F(u,a,b,C,m,f){const t=h("PluginTabsTab"),e=h("PluginTabs");return r(),p("div",null,[a[19]||(a[19]=E(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/browser/visual-regression-testing.md for this page in Markdown format</div><h1 id="可视化回归测试" tabindex="-1">可视化回归测试 <a class="header-anchor" href="#可视化回归测试" aria-label="Permalink to “可视化回归测试”">​</a></h1><p>Vitest 原生支持可视化回归测试。它会自动截取 UI 组件或页面的截图，并与基准图像对比，以捕捉那些非预期的视觉变化。</p><p>与只验证功能逻辑的功能测试不同，可视化测试能发现样式异常、布局偏移和渲染错误——这些问题如果没有细致的人工检查，往往会被忽略。</p><h2 id="为什么需要可视化回归测试" tabindex="-1">为什么需要可视化回归测试？ <a class="header-anchor" href="#为什么需要可视化回归测试" aria-label="Permalink to “为什么需要可视化回归测试？”">​</a></h2><p>视觉 bug 不会报错，但它们的外观已经改变。这正是可视化测试的意义所在：</p><ul><li>按钮依然能提交表单，但颜色却变成了亮粉色</li><li>文本在桌面端显示正常，在移动端却被挤压变形</li><li>功能没问题，可两个容器已跑出视口</li><li>精心的 CSS 重构完成了，却破坏了某个无人测试的页面布局</li></ul><p>可视化回归测试是 UI 的安全网，确保这些变化在进入生产环境之前就被自动发现并处理。</p><h2 id="快速入门" tabindex="-1">快速入门 <a class="header-anchor" href="#快速入门" aria-label="Permalink to “快速入门”">​</a></h2><div class="warning custom-block"><p class="custom-block-title">浏览器渲染差异</p><p>可视化回归测试对运行环境非常敏感，不同机器生成的截图可能存在差异，常见原因包括：</p><ul><li>字体渲染差异（最常见，Windows、macOS、Linux 各不相同）</li><li>GPU 驱动与硬件加速</li><li>是否使用无头模式</li><li>浏览器版本与设置</li><li>……甚至偶发的系统差异</li></ul><p>因此，Vitest 会在截图文件名中添加浏览器和平台信息（如 <code>button-chromium-darwin.png</code>），避免不同环境的截图互相覆盖。</p><p>要获得稳定结果，应使用相同的测试环境。<strong>推荐</strong>采用云端服务（如 <a href="https://azure.microsoft.com/en-us/products/playwright-testing" target="_blank" rel="noreferrer">Microsoft Playwright Testing</a>）或基于 <a href="https://playwright.dev/docs/docker" target="_blank" rel="noreferrer">Docker containers</a> 的环境。</p></div><p>在 Vitest 中，可通过 <a href="/guide/browser/assertion-api.html#tomatchscreenshot"><code>toMatchScreenshot</code> assertion</a> 断言运行可视化回归测试：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { page } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vitest/browser/context&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { expect, test } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hero section looks correct&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...the rest of the test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // capture and compare screenshot</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByTestId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hero&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hero-section&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="创建基准截图" tabindex="-1">创建基准截图 <a class="header-anchor" href="#创建基准截图" aria-label="Permalink to “创建基准截图”">​</a></h3><p>首次运行可视化测试时， Vitest 会生成一张基准（ baseline ）截图，并提示如下错误信息使测试失败：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>expect(element).toMatchScreenshot()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>No existing reference screenshot found; a new one was created. Review it before running tests again.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Reference screenshot:</span></span>
<span class="line"><span>  tests/__screenshots__/hero.test.ts/hero-section-chromium-darwin.png</span></span></code></pre></div><p>确认截图正确后再次运行测试，Vitest 会将后续结果与该基准图比较。</p><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>基准截图存放在测试文件所在目录下的 <code>__screenshots__</code> 文件夹中， <strong>请务必提交到版本库</strong>。</p></div><h3 id="截图组织方式" tabindex="-1">截图组织方式 <a class="header-anchor" href="#截图组织方式" aria-label="Permalink to “截图组织方式”">​</a></h3><p>Vitest 默认将截图按以下结构保存：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>.</span></span>
<span class="line"><span>├── __screenshots__</span></span>
<span class="line"><span>│   └── test-file.test.ts</span></span>
<span class="line"><span>│       ├── test-name-chromium-darwin.png</span></span>
<span class="line"><span>│       ├── test-name-firefox-linux.png</span></span>
<span class="line"><span>│       └── test-name-webkit-win32.png</span></span>
<span class="line"><span>└── test-file.test.ts</span></span></code></pre></div><p>文件名由三部分组成：</p><ul><li><strong>测试名</strong>：来自 <code>toMatchScreenshot()</code> 的第一个参数，或自动根据测试用例名生成</li><li><strong>浏览器名</strong>：<code>chrome</code>、<code>chromium</code>、<code>firefox</code>、<code>webkit</code></li><li><strong>平台</strong>：如 <code>aix</code>、<code>darwin</code>、<code>linux</code>、<code>win32</code> 等</li></ul><p>这种命名方式可避免不同环境生成的截图互相覆盖。</p><h3 id="更新基准截图" tabindex="-1">更新基准截图 <a class="header-anchor" href="#更新基准截图" aria-label="Permalink to “更新基准截图”">​</a></h3><p>当你有意修改 UI 时，需要更新基准截图：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --update</span></span></code></pre></div><p>提交前务必核对更新后的截图，确保改动符合预期。</p><h2 id="配置可视化测试" tabindex="-1">配置可视化测试 <a class="header-anchor" href="#配置可视化测试" aria-label="Permalink to “配置可视化测试”">​</a></h2><h3 id="全局配置" tabindex="-1">全局配置 <a class="header-anchor" href="#全局配置" aria-label="Permalink to “全局配置”">​</a></h3><p>可在 <a href="/guide/browser/config.html#browser-expect-tomatchscreenshot">Vitest 配置文件</a> 中设定可视化回归测试的默认规则：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vitest.config.ts">vitest.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    browser: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      expect: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        toMatchScreenshot: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          comparatorName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pixelmatch&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          comparatorOptions: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 0-1, how different can colors be?</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            threshold: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 1% of pixels can differ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            allowedMismatchedPixelRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><h3 id="单测试配置" tabindex="-1">单测试配置 <a class="header-anchor" href="#单测试配置" aria-label="Permalink to “单测试配置”">​</a></h3><p>若某个测试需要不同的比较标准，可在调用时覆盖全局设置：</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(element).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;button-hover&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  comparatorName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pixelmatch&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  comparatorOptions: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // more lax comparison for text-heavy elements</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allowedMismatchedPixelRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to “Best Practices”">​</a></h2><h3 id="聚焦测试目标元素" tabindex="-1">聚焦测试目标元素 <a class="header-anchor" href="#聚焦测试目标元素" aria-label="Permalink to “聚焦测试目标元素”">​</a></h3><p>除非确实需要测试整个页面，否则应优先只对目标组件截图，这能显著减少因页面其他部分变化而造成的误报。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ❌ Captures entire page; prone to unrelated changes</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ✅ Captures only the component under test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByTestId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;product-card&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="处理动态内容" tabindex="-1">处理动态内容 <a class="header-anchor" href="#处理动态内容" aria-label="Permalink to “处理动态内容”">​</a></h3><p>测试中，如果页面包含诸如时间戳、用户信息或随机值等动态内容，往往会导致结果不一致而造成测试失败。 解决方法有两种：一是模拟这些动态数据的生成源； 二是在使用 Playwright 进行截图时，在 <code>screenshotOptions</code> 中启用 <a href="https://playwright.dev/docs/api/class-page#page-screenshot-option-mask" target="_blank" rel="noreferrer"><code>mask</code> 选项</a>， 将这些动态区域遮盖，从而确保测试结果的稳定性。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByTestId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;profile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  screenshotOptions: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mask: [page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByTestId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;last-seen&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="禁用所有动画" tabindex="-1">禁用所有动画 <a class="header-anchor" href="#禁用所有动画" aria-label="Permalink to “禁用所有动画”">​</a></h3><p>动画效果往往会导致测试结果出现波动。为避免这种情况， 可以在测试执行过程中注入一段自定义的 CSS 样式代码，用于禁用所有动画，从而提升测试的稳定性。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::before</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">::after</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  animation-delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition-duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition-delay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>在使用 Playwright 作为测试工具时，若执行断言操作，动画会被自动禁用。 具体而言，<code>screenshotOptions</code> 配置中的 <code>animations</code> 选项会默认设为 <code>&quot;disabled&quot;</code>，从而确保截图与测试结果的稳定一致。</p></div><h3 id="设置合理的阈值" tabindex="-1">设置合理的阈值 <a class="header-anchor" href="#设置合理的阈值" aria-label="Permalink to “设置合理的阈值”">​</a></h3><p>在视觉回归测试中，阈值调整是一项需要权衡的工作——它取决于页面内容、测试环境、 应用所能容忍的差异范围，且可能因具体测试而有所不同。</p><p>Vitest 并未为像素差异设定默认阈值，这需要由用户根据实际需求来决定。 官方建议使用 <code>allowedMismatchedPixelRatio</code>，让阈值按截图的整体尺寸比例计算，而非依赖固定像素数量。</p><p>当 <code>allowedMismatchedPixelRatio</code> 与 <code>allowedMismatchedPixels</code> 同时设置时， Vitest 会优先采用二者中限制更严格的那一个，以确保测试结果的准确性与一致性。</p><h3 id="保持统一的视口大小" tabindex="-1">保持统一的视口大小 <a class="header-anchor" href="#保持统一的视口大小" aria-label="Permalink to “保持统一的视口大小”">​</a></h3><p>浏览器实例的默认窗口尺寸可能存在差异，这会影响视觉回归测试的稳定性。为避免由于尺寸不一致而产生的截图偏差， 建议在测试脚本或浏览器实例配置中显式指定一个固定的视口大小，从而确保测试结果的可重复性与一致性。</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">viewport</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1280</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">720</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vitest.config.ts">vitest.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    browser: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      enabled: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      provider: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;playwright&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      instances: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          browser: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chromium&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          viewport: { width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1280</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">720</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><h3 id="使用-git-lfs-管理基准截图" tabindex="-1">使用 Git LFS 管理基准截图 <a class="header-anchor" href="#使用-git-lfs-管理基准截图" aria-label="Permalink to “使用 Git LFS 管理基准截图”">​</a></h3><p>对于规模较大的视觉回归测试套件，建议将基准截图文件存储在 <a href="https://github.com/git-lfs/git-lfs?tab=readme-ov-file" target="_blank" rel="noreferrer">Git LFS</a> 中。 这样既能避免仓库体积膨胀，又能高效管理和传输这些大尺寸文件，提升团队协作效率。</p><h2 id="调试视觉测试失败" tabindex="-1">调试视觉测试失败 <a class="header-anchor" href="#调试视觉测试失败" aria-label="Permalink to “调试视觉测试失败”">​</a></h2><p>当视觉回归测试未能通过时， Vitest 会生成三张关键截图，帮助你分析问题所在：</p><ol><li><strong>参考截图（ Reference screenshot ）</strong>：测试期望的基准图像</li><li><strong>实际截图（ Actual screenshot ）</strong>：测试运行过程中截取的画面</li><li><strong>差异图（ Diff image ）</strong>：用高亮标记出参考图与实际图的差异（有时可能不会生成）</li></ol><p>在调试时，你会在输出中看到类似如下的文件列表或路径信息：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>expect(element).toMatchScreenshot()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Screenshot does not match the stored reference.</span></span>
<span class="line"><span>245 pixels (ratio 0.03) differ.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Reference screenshot:</span></span>
<span class="line"><span>  tests/__screenshots__/button.test.ts/button-chromium-darwin.png</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Actual screenshot:</span></span>
<span class="line"><span>  tests/.vitest-attachments/button.test.ts/button-chromium-darwin-actual.png</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Diff image:</span></span>
<span class="line"><span>  tests/.vitest-attachments/button.test.ts/button-chromium-darwin-diff.png</span></span></code></pre></div><h3 id="如何解读差异图" tabindex="-1">如何解读差异图 <a class="header-anchor" href="#如何解读差异图" aria-label="Permalink to “如何解读差异图”">​</a></h3><ul><li><strong>红色像素</strong>：表示参考截图与实际截图之间存在显著差异的区域</li><li><strong>黄色像素</strong>：由抗锯齿处理带来的细微差异（仅在未忽略抗锯齿时可见）</li><li><strong>透明或原始图像部分</strong>：表示两张截图在该区域完全一致</li></ul><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>如果差异图几乎被红色覆盖，说明测试结果与预期严重不符，需要重点排查。 若只是文字边缘零星出现少量红点，可能只是渲染细节差异，此时适当提高阈值即可解决。</p></div><h2 id="常见问题与解决方案" tabindex="-1">常见问题与解决方案 <a class="header-anchor" href="#常见问题与解决方案" aria-label="Permalink to “常见问题与解决方案”">​</a></h2><h3 id="字体渲染引发的误报" tabindex="-1">字体渲染引发的误报 <a class="header-anchor" href="#字体渲染引发的误报" aria-label="Permalink to “字体渲染引发的误报”">​</a></h3><p>由于不同操作系统在字体可用性与渲染方式上差异明显，视觉回归测试中可能会出现“误报”现象。为降低这种风险，可以考虑以下做法：</p><ul><li><p>使用 Web 字体，并在测试执行前等待字体完全加载；</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// wait for fonts to load</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.fonts.ready</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// continue with your tests</span></span></code></pre></div></li><li><p>对包含大量文字的区域适当提高像素差异的比较阈值，以减少因字体渲染细微差别导致的误报；</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getByTestId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;article-summary&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toMatchScreenshot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  comparatorName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pixelmatch&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  comparatorOptions: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 10% of the pixels are allowed to change</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allowedMismatchedPixelRatio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></li><li><p>使用云端服务或容器化测试环境，确保字体渲染效果在各次测试中保持一致，从而减少系统差异带来的影响；</p></li></ul><h3 id="测试不稳定或截图尺寸不一致" tabindex="-1">测试不稳定或截图尺寸不一致 <a class="header-anchor" href="#测试不稳定或截图尺寸不一致" aria-label="Permalink to “测试不稳定或截图尺寸不一致”">​</a></h3><p>如果测试结果出现随机通过或失败，或者在不同运行中生成的截图尺寸不一致，可以采取以下措施：</p><ul><li>确保页面所有内容均已加载完成，包括加载指示器与动画；</li><li>明确设置固定的视口大小，例如：<code>await page.viewport(1920, 1080)</code>；</li><li>检查页面在视口临界尺寸下的响应式布局表现；</li><li>排查是否存在非预期的动画或过渡效果干扰截图结果；</li><li>对体积较大的截图适当延长测试的超时时间；</li><li>使用云端服务或容器化环境，确保字体渲染、浏览器配置等保持一致。</li></ul><h2 id="团队版视觉回归测试方案" tabindex="-1">团队版视觉回归测试方案 <a class="header-anchor" href="#团队版视觉回归测试方案" aria-label="Permalink to “团队版视觉回归测试方案”">​</a></h2><p>视觉回归测试对环境的稳定性要求极高，而本地开发机并不适合担当这一角色。</p><p>在团队协作中，常见的三种方案是：</p><ol><li><strong>自托管运行器</strong>：部署过程复杂，日常维护工作量大；</li><li><strong>GitHub Actions</strong>：对开源项目免费，可与任何测试框架或服务集成；</li><li><strong>云服务</strong>：如 <a href="https://azure.microsoft.com/en-us/products/playwright-testing" target="_blank" rel="noreferrer">Microsoft Playwright Testing</a>，专为解决视觉测试环境一致性问题而构建。</li></ol><p>我们将重点介绍第 2 和第 3 种方案，因为它们能最快投入使用。</p><p>主要权衡点在于：</p><ul><li><strong>GitHub Actions</strong>：视觉测试只能在持续集成（CI）环境中运行，开发者无法直接在本地执行；</li><li><strong>Microsoft 云服务</strong>：可在任意环境运行，但需额外付费，并且仅支持 Playwright。</li></ul>`,77)),l(e,{sharedStateKey:"vrt-for-teams"},{default:n(()=>[l(t,{label:"GitHub Actions"},{default:n(()=>[a[2]||(a[2]=s("p",null,"要点在于，将视觉回归测试与常规测试分离运行。 否则，你可能会因截图差异引发的失败日志而浪费数小时进行排查。",-1)),a[3]||(a[3]=s("h4",{id:"测试组织建议",tabindex:"-1"},[i("测试组织建议 "),s("a",{class:"header-anchor",href:"#测试组织建议","aria-label":"Permalink to “测试组织建议”"},"​")],-1)),a[4]||(a[4]=s("p",null,[i("首先，应将视觉回归测试与其他测试隔离管理。 建议单独建立一个 "),s("code",null,"visual"),i(" 文件夹（或根据项目结构选择更合适的目录名称）来存放这些测试用例，以便维护与执行。")],-1)),a[5]||(a[5]=s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":"package.json"},"package.json")]),s("div",{class:"language-json"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"json"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "scripts"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "test:unit"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"vitest --exclude tests/visual/*.test.ts"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "test:visual"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"vitest tests/visual/*.test.ts"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])])],-1)),a[6]||(a[6]=s("p",null,[i("这样，开发者就能在本地运行 "),s("code",null,"npm run test:unit"),i(" ，而无需受到视觉回归测试的影响； 视觉测试则放在环境一致的持续集成（ CI ）平台中运行，以确保结果稳定可靠。")],-1)),a[7]||(a[7]=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"抉择"),s("p",null,[i("不喜欢用 glob 匹配模式？那你也可以创建独立的 "),s("a",{href:"/guide/projects.html"},"测试项目"),i("，并通过以下方式来运行它们：")]),s("ul",null,[s("li",null,[s("code",null,"vitest --project unit")]),s("li",null,[s("code",null,"vitest --project visual")])])],-1)),a[8]||(a[8]=s("h4",{id:"持续集成-ci-环境配置",tabindex:"-1"},[i("持续集成（ CI ）环境配置 "),s("a",{class:"header-anchor",href:"#持续集成-ci-环境配置","aria-label":"Permalink to “持续集成（ CI ）环境配置”"},"​")],-1)),a[9]||(a[9]=s("p",null,"在 CI 环境中运行视觉回归测试时，需要确保浏览器已正确安装。至于如何安装，则取决于你所使用的 CI 服务提供商及其运行环境。",-1)),l(e,{sharedStateKey:"provider"},{default:n(()=>[l(t,{label:"Playwright"},{default:n(()=>a[0]||(a[0]=[s("p",null,[s("a",{href:"https://npmjs.com/package/playwright",target:"_blank",rel:"noreferrer"},"Playwright"),i(" 能让浏览器安装与管理变得非常简单。 你只需固定所用的 Playwright 版本，并在运行测试之前加入以下命令或脚本：")],-1),s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":".github/workflows/ci.yml"},".github/workflows/ci.yml")]),s("div",{class:"language-yaml"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"yaml"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# ...the rest of the workflow")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"- "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Install Playwright Browsers")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"npx --no playwright install --with-deps --only-shell")])])])])],-1)])),_:1,__:[0]}),l(t,{label:"WebdriverIO"},{default:n(()=>a[1]||(a[1]=[s("p",null,[s("a",{href:"https://www.npmjs.com/package/webdriverio",target:"_blank",rel:"noreferrer"},"WebdriverIO"),i(" 要求用户自行准备浏览器环境。不过， "),s("a",{href:"https://github.com/browser-actions",target:"_blank",rel:"noreferrer"}," @browser-actions "),i(" 团队已经为此提供了方便的解决方案， 帮你轻松完成浏览器的安装与配置。")],-1),s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":".github/workflows/ci.yml"},".github/workflows/ci.yml")]),s("div",{class:"language-yaml"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"yaml"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# ...the rest of the workflow")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"- "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"uses"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"browser-actions/setup-chrome@v1")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  with"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"    chrome-version"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"120")])])])])],-1)])),_:1,__:[1]})]),_:1}),a[10]||(a[10]=s("p",null,"最后，运行你的视觉回归测试：",-1)),a[11]||(a[11]=s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":".github/workflows/ci.yml"},".github/workflows/ci.yml")]),s("div",{class:"language-yaml"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"yaml"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# ...the rest of the workflow")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# ...browser setup")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"- "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Visual Regression Testing")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"npm run test:visual")])])])])],-1)),a[12]||(a[12]=s("h4",{id:"更新工作流程",tabindex:"-1"},[i("更新工作流程 "),s("a",{class:"header-anchor",href:"#更新工作流程","aria-label":"Permalink to “更新工作流程”"},"​")],-1)),a[13]||(a[13]=s("p",null,[i("关键点来了——切勿在每一次 Pull Request 中都自动更新截图， "),s("small",null,[s("em",null,"(那只会带来混乱)")]),i("。更稳妥的方式，是建立一个手动触发的工作流程， 让开发者在有意更改 UI 时主动运行，从而更新基准截图。")],-1)),a[14]||(a[14]=s("p",null,"该工作流程具备以下特性：",-1)),a[15]||(a[15]=s("ul",null,[s("li",null,"仅在功能分支上运行，确保主分支安全不受影响；"),s("li",null,"自动将触发流程的开发者署名为共同作者；"),s("li",null,"阻止同一分支上的并发执行，避免冲突与资源浪费；"),s("li",null,[i("生成一份清晰美观的执行摘要，便于快速查看结果。 "),s("ul",null,[s("li",null,[s("p",null,[s("strong",null,"当基准截图发生变动时"),i("，系统会列出所有具体的变化项，方便开发者快速了解差异。")]),s("img",{alt:"Action summary after updates","img-light":"",src:d}),s("img",{alt:"Action summary after updates","img-dark":"",src:g})]),s("li",null,[s("p",null,[s("strong",null,"当没有任何变化时"),i("，系统同样会明确提示，让你一目了然。")]),s("img",{alt:"Action summary after no updates","img-light":"",src:c}),s("img",{alt:"Action summary after no updates","img-dark":"",src:o})])])])],-1)),a[16]||(a[16]=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title custom-block-title-default"},"TIP"),s("p",null,[i("这只是实现的其中一种方式。 有些团队倾向于在 Pull Request 中添加特定评论（如 "),s("code",null,"/update-screenshots"),i("）来触发更新， 也有团队通过添加标签来完成这一操作。 你可以根据自身的开发流程进行调整。")]),s("p",null,"关键在于，必须建立一种可控的机制来更新基准截图， 以避免不必要的混乱和错误。")],-1)),a[17]||(a[17]=s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":".github/workflows/update-screenshots.yml"},".github/workflows/update-screenshots.yml")]),s("div",{class:"language-yaml"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"yaml"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Update Visual Regression Screenshots")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"on"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  workflow_dispatch"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# manual trigger only")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"env"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  AUTHOR_NAME"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'github-actions[bot]'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  AUTHOR_EMAIL"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'41898282+github-actions[bot]@users.noreply.github.com'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  COMMIT_MESSAGE"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    test: update visual regression screenshots")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"    Co-authored-by: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"jobs"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  update-screenshots"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"    runs-on"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"ubuntu-24.04")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    # safety first: don't run on main")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"    if"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"github.ref_name != github.event.repository.default_branch")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    # one at a time per branch")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"    concurrency"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"      group"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"visual-regression-screenshots@${{ github.ref_name }}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"      cancel-in-progress"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"    permissions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"      contents"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"write"),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," # needs to push changes")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"    steps"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Checkout selected branch")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        uses"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"actions/checkout@v4")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        with"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"          ref"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"${{ github.ref_name }}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"          # use PAT if triggering other workflows")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"          # token: ${{ secrets.GITHUB_TOKEN }}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Configure Git")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'          git config --global user.name "${{ env.AUTHOR_NAME }}"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'          git config --global user.email "${{ env.AUTHOR_EMAIL }}"')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # your setup steps here (node, pnpm, whatever)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Setup Node.js")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        uses"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"actions/setup-node@v4")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        with"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"          node-version"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"24")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Install dependencies")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"npm ci")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Install Playwright Browsers")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"npx --no playwright install --with-deps --only-shell")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # the magic happens below 🪄")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Update Visual Regression Screenshots")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"npm run test:visual --update")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # check what changed")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Check for changes")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        id"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"check_changes")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          CHANGED_FILES=$(git status --porcelain | awk '{print $2}')")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'          if [ "${CHANGED_FILES:+x}" ]; then')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "changes=true" >> $GITHUB_OUTPUT')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "Changes detected"')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"            # save the list for the summary")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "changed_files<<EOF" >> $GITHUB_OUTPUT')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "$CHANGED_FILES" >> $GITHUB_OUTPUT')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "EOF" >> $GITHUB_OUTPUT')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "changed_count=$(echo "$CHANGED_FILES" | wc -l)" >> $GITHUB_OUTPUT')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          else")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "changes=false" >> $GITHUB_OUTPUT')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "No changes detected"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          fi")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # commit if there are changes")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Commit changes")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        if"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"steps.check_changes.outputs.changes == 'true'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          git add -A")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'          git commit -m "${{ env.COMMIT_MESSAGE }}"')]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Push changes")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        if"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"steps.check_changes.outputs.changes == 'true'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"git push origin ${{ github.ref_name }}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"      # pretty summary for humans")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      - "),s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"name"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Summary")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"        run"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'          if [[ "${{ steps.check_changes.outputs.changes }}" == "true" ]]; then')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "### 📸 Visual Regression Screenshots Updated" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "Successfully updated **${{ steps.check_changes.outputs.changed_count }}** screenshot(s) on \\`${{ github.ref_name }}\\`" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "#### Changed Files:" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "\\`\\`\\`" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "${{ steps.check_changes.outputs.changed_files }}" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "\\`\\`\\`" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "✅ The updated screenshots have been committed and pushed. Your visual regression baseline is now up to date!" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          else")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "### ℹ️ No Screenshot Updates Required" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "The visual regression test command ran successfully but no screenshots needed updating." >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'            echo "All screenshots are already up to date! 🎉" >> $GITHUB_STEP_SUMMARY')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"          fi")])])])])],-1))]),_:1,__:[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}),l(t,{label:"Microsoft Playwright Testing"},{default:n(()=>a[18]||(a[18]=[s("p",null,"你的测试依旧在本地运行，只是将浏览器托管到云端执行。 这基于 Playwright 的远程浏览器功能，但所有云端基础设施均由 Microsoft 负责维护与管理。",-1),s("h4",{id:"测试组织建议-1",tabindex:"-1"},[i("测试组织建议 "),s("a",{class:"header-anchor",href:"#测试组织建议-1","aria-label":"Permalink to “测试组织建议”"},"​")],-1),s("p",null,"为控制成本，应将视觉回归测试与其他测试分离管理， 并确保只有那些实际需要截取页面截图的用例才会调用该服务。",-1),s("p",null,[i("最为简洁高效的做法，是使用 "),s("a",{href:"/guide/projects.html"},"Test Projects"),i(" 功能来隔离这些测试。")],-1),s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":"vitest.config.ts"},"vitest.config.ts")]),s("div",{class:"language-ts"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"ts"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { env } "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'node:process'")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"import"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," { defineConfig } "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"from"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'vitest/config'")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"export"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," default"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," defineConfig"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  // ...global Vite config")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  tests: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    // ...global Vitest config")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    projects: [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        extends: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        test: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          name: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'unit'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          include: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'tests/**/*.test.ts'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"          // regular config, can use local browsers")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        extends: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        test: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          name: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'visual'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"          // or you could use a different suffix, e.g.,: `tests/**/*.visual.ts?(x)`")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          include: ["),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'visual-regression-tests/**/*.test.ts?(x)'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          browser: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            enabled: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            provider: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'playwright'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            headless: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"true"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            instances: [")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"              {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                browser: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'chromium'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                viewport: { width: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"2560"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},", height: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"1440"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                connect: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                  wsEndpoint: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"`${"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"env"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"PLAYWRIGHT_SERVICE_URL"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"}?cap=${"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"JSON"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"stringify"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"({")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"                    os: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'linux'"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},", "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"// always use Linux for consistency")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"                    // helps identifying runs in the service's dashboard")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"                    runId: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"`Vitest ${"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"env"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"CI"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," ?"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'CI'"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," :"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," 'local'} run @${"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"new"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}}," Date"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"()."),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"toISOString"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"()"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"}`"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"                  })"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"}`"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                  options: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    exposeNetwork: "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"'<loopback>'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    headers: {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"                      'x-mpt-access-key'"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": env."),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"PLAYWRIGHT_SERVICE_ACCESS_TOKEN"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                    timeout: "),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"30_000"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"                },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"              },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"          },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"      },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    ],")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  },")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"})")])])])])],-1),s("p",null,"该服务会提供两个关键环境变量：",-1),s("ul",null,[s("li",null,[s("code",null,"PLAYWRIGHT_SERVICE_URL"),i("：指示 Playwright 连接的服务器地址")]),s("li",null,[s("code",null,"PLAYWRIGHT_SERVICE_ACCESS_TOKEN"),i("：你的身份验证令牌")])],-1),s("div",{class:"danger custom-block"},[s("p",{class:"custom-block-title"},"令牌务必保密！"),s("p",null,[i("切勿将 "),s("code",null,"PLAYWRIGHT_SERVICE_ACCESS_TOKEN"),i(" 提交到代码仓库。 任何获取到该令牌的人都可能在你的账户上产生高额费用。 在本地开发时，应通过环境变量引用令牌；在 CI 中，应将其存放于安全的密钥管理中。")])],-1),s("p",null,[i("然后，将 "),s("code",null,"test"),i(" 脚本按如下方式拆分运行：")],-1),s("div",{class:"vp-code-block-title"},[s("div",{class:"vp-code-block-title-bar"},[s("span",{class:"vp-code-block-title-text","data-title":"package.json"},"package.json")]),s("div",{class:"language-json"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"json"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"{")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'  "scripts"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "test:visual"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"vitest --project visual"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},",")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},'    "test:unit"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"vitest --project unit"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"  }")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")])])])])],-1),s("h4",{id:"运行测试",tabindex:"-1"},[i("运行测试 "),s("a",{class:"header-anchor",href:"#运行测试","aria-label":"Permalink to “运行测试”"},"​")],-1),s("div",{class:"language-bash"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"bash"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Local development")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"npm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," test:unit"),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    # free, runs locally")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"npm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," test:visual"),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"  # uses cloud browsers")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# Update screenshots")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"npm"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," run"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," test:visual"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --update")])])])],-1),s("p",null,"这种方式的最大优势在于“开箱即用”：",-1),s("ul",null,[s("li",null,[s("strong",null,"截图结果一致"),i("：所有人共享相同的云端浏览器环境，避免环境差异；")]),s("li",null,[s("strong",null,"支持本地执行"),i("：开发者可在本地直接运行并更新视觉回归测试；")]),s("li",null,[s("strong",null,"按量计费"),i("：仅有视觉测试会消耗服务分钟数，成本可控；")]),s("li",null,[s("strong",null,"零运维负担"),i("：无需配置 Docker 或复杂的工作流，几乎不需额外维护。")])],-1),s("h4",{id:"持续集成-ci-环境配置-1",tabindex:"-1"},[i("持续集成（ CI ）环境配置 "),s("a",{class:"header-anchor",href:"#持续集成-ci-环境配置-1","aria-label":"Permalink to “持续集成（ CI ）环境配置”"},"​")],-1),s("p",null,"在 CI 平台中，将所需的密钥添加到环境变量或机密配置中：",-1),s("div",{class:"language-yaml"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"yaml"),s("pre",{class:"shiki shiki-themes github-light github-dark",style:{"--shiki-light":"#24292e","--shiki-dark":"#e1e4e8","--shiki-light-bg":"#fff","--shiki-dark-bg":"#24292e"},tabindex:"0",dir:"ltr"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"env"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},":")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  PLAYWRIGHT_SERVICE_URL"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"${{ vars.PLAYWRIGHT_SERVICE_URL }}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#22863A","--shiki-dark":"#85E89D"}},"  PLAYWRIGHT_SERVICE_ACCESS_TOKEN"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},": "),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"${{ secrets.PLAYWRIGHT_SERVICE_ACCESS_TOKEN }}")])])])],-1),s("p",null,"接下来，你只需像往常一样运行测试，其余的由服务全权负责处理。",-1)])),_:1,__:[18]})]),_:1}),a[20]||(a[20]=s("h3",{id:"该选哪一个",tabindex:"-1"},[i("该选哪一个？ "),s("a",{class:"header-anchor",href:"#该选哪一个","aria-label":"Permalink to “该选哪一个？”"},"​")],-1)),a[21]||(a[21]=s("p",null,"两种方案都可行，关键在于团队最在意的痛点是什么。",-1)),a[22]||(a[22]=s("p",null,[i("如果你的团队已经深度依赖 GitHub 生态，那么 "),s("strong",null,"GitHub Actions"),i(" 几乎是无可替代的选择——对开源项目免费、 支持任意浏览器服务商、并且可完全掌控执行流程。")],-1)),a[23]||(a[23]=s("p",null,"缺点在于：当有人在本地生成的截图与 CI 环境的基准不一致时，就会出现那句熟悉的“在我机器上没问题”。",-1)),a[24]||(a[24]=s("p",null,"如果团队需要在本地执行视觉回归测试，那么云服务或许更适合。 这种方式特别适合有设计师参与审核，或开发者希望在推送代码前发现并修复问题的团队， 能够跳过“推送—等待—检查—修改—再推送”的繁琐循环。",-1)),a[25]||(a[25]=s("p",null,"如果依然犹豫，不妨先从 GitHub Actions 开始；等到本地测试成为痛点时，再引入云服务也不迟。",-1))])}const v=k(y,[["render",F]]);export{A as __pageData,v as default};
