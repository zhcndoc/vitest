import{_ as a}from"./chunks/CourseLink.vue_vue_type_script_setup_true_lang.DH_FxdFm.js";import{_ as e,i as n,o as l,ar as i,g as h,w as p,M as r}from"./chunks/framework.lk4jPI36.js";const y=JSON.parse('{"title":"快速起步 | 指南","description":"","frontmatter":{"title":"快速起步 | 指南"},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md","lastUpdated":1758986088000}'),k={name:"guide/index.md"};function d(o,s,c,g,E,b){const t=a;return l(),n("div",null,[s[1]||(s[1]=i('<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/index.md for this page in Markdown format</div><h1 id="快速起步" tabindex="-1">快速起步 <a class="header-anchor" href="#快速起步" aria-label="Permalink to “快速起步”">​</a></h1><h2 id="总览" tabindex="-1">总览 <a class="header-anchor" href="#总览" aria-label="Permalink to “总览”">​</a></h2><p>Vitest（发音为 <em>&quot;veetest&quot;</em>） 是由 Vite 驱动的下一代测试框架。</p><p>你可以在 <a href="/guide/why.html">为什么是 Vitest</a> 中了解有关该项目背后的基本原理的更多信息。</p><h2 id="在线试用-vitest" tabindex="-1">在线试用 Vitest <a class="header-anchor" href="#在线试用-vitest" aria-label="Permalink to “在线试用 Vitest”">​</a></h2><p>你可以在 <a href="https://vitest.new" target="_blank" rel="noreferrer">StackBlitz</a> 上在线尝试 Vitest 。它直接在浏览器中运行 Vitest，它几乎与本地设置相同，但不需要在你的计算机上安装任何东西。</p><h2 id="将-vitest-安装到项目" tabindex="-1">将 Vitest 安装到项目 <a class="header-anchor" href="#将-vitest-安装到项目" aria-label="Permalink to “将 Vitest 安装到项目”">​</a></h2>',8)),h(t,{href:"https://vueschool.io/lessons/how-to-install-vitest?friend=vueuse"},{default:p(()=>s[0]||(s[0]=[r("通过视频了解如何安装",-1)])),_:1,__:[0]}),s[2]||(s[2]=i(`<div class="vp-code-group"><div class="tabs"><input type="radio" name="group-24" id="tab-25" checked><label data-title="npm" for="tab-25">npm</label><input type="radio" name="group-24" id="tab-26"><label data-title="yarn" for="tab-26">yarn</label><input type="radio" name="group-24" id="tab-27"><label data-title="pnpm" for="tab-27">pnpm</label><input type="radio" name="group-24" id="tab-28"><label data-title="bun" for="tab-28">bun</label></div><div class="blocks"><div class="language-bash active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitest</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitest</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitest</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bun</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitest</span></span></code></pre></div></div></div><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>Vitest 需要 Vite &gt;=v5.0.0 和 Node &gt;=v18.0.0</p></div><p>如果在 <code>package.json</code> 中安装一份 <code>vitest</code> 的副本，可以使用上面列出的方法之一。然而，如果更倾向于直接运行 <code>vitest</code> ，可以使用 <code>npx vitest</code>（ <code>npx</code> 是会随着 npm 和 Node.js 一起被安装）。</p><p><code>npx</code> 是一个命令行工具，用于执行指定的命令。默认情况下，<code>npx</code> 会首先检查本地项目的二进制文件中是否存在该命令。如果在那里没有找到，<code>npx</code> 会在系统的 <code>$PATH</code> 中查找并执行该命令（如果找到的话）。如果两个位置都没有找到该命令，<code>npx</code> 会在执行之前将其安装在临时位置。</p><h2 id="编写测试" tabindex="-1">编写测试 <a class="header-anchor" href="#编写测试" aria-label="Permalink to “编写测试”">​</a></h2><p>例如，我们将编写一个简单的测试来验证将两个数字相加的函数的输出。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="sum.js">sum.js</span></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="sum.test.js">sum.test.js</span></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { expect, test } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { sum } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./sum.js&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;adds 1 + 2 to equal 3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>一般情况下，执行测试的文件名中必须包含 &quot;.test.&quot; 或 &quot;.spec.&quot; 。</p></div><p>接下来，为了执行测试，请将以下部分添加到你的 <code>package.json</code> 文件中：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="package.json">package.json</span></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitest&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><p>最后，运行 <code>npm run test</code>、<code>yarn test</code> 或 <code>pnpm test</code>，具体取决于你的包管理器，Vitest 将打印此消息：</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>✓ sum.test.js (1)</span></span>
<span class="line"><span>  ✓ adds 1 + 2 to equal 3</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Test Files  1 passed (1)</span></span>
<span class="line"><span>     Tests  1 passed (1)</span></span>
<span class="line"><span>  Start at  02:15:44</span></span>
<span class="line"><span>  Duration  311ms</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>如果使用 Bun 作为软件包管理器，请确保使用 <code>bun run test</code> 命令而不是 <code>bun test</code> 命令，否则 Bun 将运行自己的测试运行程序。</p></div><p>了解更多关于 Vitest 的使用，请参考 <a href="https://cn.vitest.dev/api/" target="_blank" rel="noreferrer">API 索引</a> 部分。</p><h2 id="配置-vitest" tabindex="-1">配置 Vitest <a class="header-anchor" href="#配置-vitest" aria-label="Permalink to “配置 Vitest”">​</a></h2><p>Vitest 的主要优势之一是它与 Vite 的统一配置。如果存在，<code>vitest</code> 将读取你的根目录 <code>vite.config.ts</code> 以匹配插件并设置为你的 Vite 应用。例如，你的 Vite 有 <a href="https://cn.vitejs.dev/config/#resolve-alias" target="_blank" rel="noreferrer">resolve.alias</a> 和 <a href="https://cn.vitejs.dev/guide/using-plugins.html" target="_blank" rel="noreferrer">plugins</a> 的配置将会在 Vitest 中开箱即用。如果你想在测试期间想要不同的配置，你可以:</p><ul><li>创建 <code>vitest.config.ts</code>，优先级将会最高。</li><li>将 <code>--config</code> 选项传递给 CLI，例如 <code>vitest --config ./path/to/vitest.config.ts</code>。</li><li>在 <code>defineConfig</code> 上使用 <code>process.env.VITEST</code> 或 <code>mode</code> 属性（如果没有被覆盖，将设置为 <code>test</code>）有条件地在 <code>vite.config.ts</code> 中应用不同的配置。</li></ul><p>Vitest 支持与 Vite 相同的配置文件扩展名：<code>.js</code>、<code>.mjs</code>、<code>.cjs</code>、<code>.ts</code>、<code>.cts</code>、<code>.mts</code>。 Vitest 不支持 <code>.json</code> 扩展名。</p><p>如果你不使用 Vite 作为构建工具，你可以使用配置文件中的 <code>test</code> 属性来配置 Vitest：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vitest.config.ts">vitest.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><div class="tip custom-block"><p class="custom-block-title custom-block-title-default">TIP</p><p>即使你自己不使用 Vite，Vitest 的转换管道也严重依赖它。因此，你还可以配置<a href="https://cn.vitejs.dev/config/" target="_blank" rel="noreferrer">Vite 文档</a>中描述的任何属性。</p></div><p>如果你已经在使用 Vite，请在 Vite 配置中添加 <code>test</code> 属性。你还需要使用 <a href="https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html#-reference-types-" target="_blank" rel="noreferrer">三斜杠指令</a> 在你的配置文件的顶部引用。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vite.config.ts">vite.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">reference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> types</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitest&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><p><code>&lt;reference types=&quot;vitest&quot; /&gt;</code> 将在下一次主要更新中停止工作，但我们可以开始迁移到 Vitest 2.1 中的 <code>vitest/config</code>：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vite.config.ts">vite.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">reference</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> types</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitest/config&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ... Specify options here.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><p>可以参阅 <a href="./../config/">配置索引</a> 中的配置选项列表</p><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>如果你决定为 Vite 和 Vitest 使用两个单独的配置文件，请确保在 Vitest 配置文件中定义相同的 Vite 选项，因为它将覆盖你的 Vite 文件，而不是扩展它。你还可以使用 <code>vite</code> 或<code>vitest/config</code> 条目中的 <code>mergeConfig</code> 方法将 Vite 配置与 Vitest 配置合并：</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-120" id="tab-121" checked><label data-title="vitest.config.mjs" for="tab-121">vitest.config.mjs</label><input type="radio" name="group-120" id="tab-122"><label data-title="vite.config.mjs" for="tab-122">vite.config.mjs</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig, mergeConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> viteConfig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;./vite.config.mjs&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mergeConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(viteConfig, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}))</span></span></code></pre></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Vue </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@vitejs/plugin-vue&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>但我们建议 Vite 和 Vitest 使用相同的文件，而不是创建两个单独的文件。</p></div></div></div><h2 id="多项目支持" tabindex="-1">多项目支持 <a class="header-anchor" href="#多项目支持" aria-label="Permalink to “多项目支持”">​</a></h2><p>通过 <a href="/guide/projects.html">测试项目</a> 功能，你可以在同一个项目里运行多套不同的配置。只需在 vitest.config 文件中列出对应的文件和文件夹，即可定义各个项目。</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="vitest.config.ts">vitest.config.ts</span></div><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    projects: [</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // you can use a list of glob patterns to define your projects</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // Vitest expects a list of config files</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // or directories where there is a config file</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;packages/*&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;tests/*/vitest.config.{e2e,unit}.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // you can even run the same tests,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // but with different configs in the same &quot;vitest&quot; process</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;happy-dom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          root: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./shared_tests&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          environment: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;happy-dom&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          setupFiles: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./setup.happy-dom.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          root: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./shared_tests&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          environment: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;node&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          setupFiles: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./setup.node.ts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div></div><h2 id="命令行" tabindex="-1">命令行 <a class="header-anchor" href="#命令行" aria-label="Permalink to “命令行”">​</a></h2><p>在安装了 Vitest 的项目中，你可以在 npm 脚本中使用 <code>vitest</code> 脚本，或者直接使用 <code>npx vitest</code> 运行它。 以下是脚手架 Vitest 项目中的默认 npm 脚本：</p><div class="vp-code-block-title"><div class="vp-code-block-title-bar"><span class="vp-code-block-title-text" data-title="package.json">package.json</span></div><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;coverage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vitest run --coverage&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><p>要在不监视文件更改的情况下运行一次测试，请使用 <code>vitest run</code>。 你还可以指定其他 CLI 选项，例如 <code>--port</code> 或 <code>--https</code>。 有关 CLI 选项的完整列表，可以在你的项目中运行 <code>npx vitest --help</code>。</p><p>了解更多有关 <a href="/guide/cli.html">命令行界面</a> 的更多信息</p><h2 id="自动安装依赖项" tabindex="-1">自动安装依赖项 <a class="header-anchor" href="#自动安装依赖项" aria-label="Permalink to “自动安装依赖项”">​</a></h2><p>如果某些依赖项尚未安装，Vitest 会提示您安装。您可以通过设置 <code>VITEST_SKIP_INSTALL_CHECKS=1</code> 环境变量来禁用此行为。</p><h2 id="ide-集成" tabindex="-1">IDE 集成 <a class="header-anchor" href="#ide-集成" aria-label="Permalink to “IDE 集成”">​</a></h2><p>我们还提供了官方的 Visual Studio Code 扩展，以增强你使用 Vitest 的测试体验。</p><p><a href="https://marketplace.visualstudio.com/items?itemName=vitest.explorer" target="_blank" rel="noreferrer">从 VS Code 插件市场进行安装</a></p><p>了解更多有关 <a href="/guide/ide.html">IDE 插件</a> 的更多信息</p><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-label="Permalink to “示例”">​</a></h2><table tabindex="0"><thead><tr><th>Example</th><th>Source</th><th>Playground</th></tr></thead><tbody><tr><td><code>basic</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/basic" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/basic?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>fastify</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/fastify" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/fastify?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>in-source-test</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/in-source-test" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/in-source-test?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>lit</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/lit" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/lit?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>vue</code></td><td><a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/vue" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-tests/browser-examples/tree/main/examples/vue?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>marko</code></td><td><a href="https://github.com/marko-js/examples/tree/master/examples/library-ts" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/marko-js/examples/tree/master/examples/library-ts/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>preact</code></td><td><a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/preact" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-tests/browser-examples/tree/main/examples/preact?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>react</code></td><td><a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/react" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-tests/browser-examples/tree/main/examples/react?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>solid</code></td><td><a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/solid" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-tests/browser-examples/tree/main/examples/solid?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>svelte</code></td><td><a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/svelte" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-tests/browser-examples/tree/main/examples/svelte?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>sveltekit</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/sveltekit" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/sveltekit?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>profiling</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/profiling" target="_blank" rel="noreferrer">GitHub</a></td><td>Not Available</td></tr><tr><td><code>typecheck</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/typecheck" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/typecheck?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr><tr><td><code>projects</code></td><td><a href="https://github.com/vitest-dev/vitest/tree/main/examples/projects" target="_blank" rel="noreferrer">GitHub</a></td><td><a href="https://stackblitz.com/fork/github/vitest-dev/vitest/tree/main/examples/projects?initialPath=__vitest__/" target="_blank" rel="noreferrer">Play Online</a></td></tr></tbody></table><h2 id="使用-vitest-的项目" tabindex="-1">使用 Vitest 的项目 <a class="header-anchor" href="#使用-vitest-的项目" aria-label="Permalink to “使用 Vitest 的项目”">​</a></h2><ul><li><a href="https://github.com/unocss/unocss" target="_blank" rel="noreferrer">unocss</a></li><li><a href="https://github.com/antfu/unplugin-auto-import" target="_blank" rel="noreferrer">unplugin-auto-import</a></li><li><a href="https://github.com/antfu/unplugin-vue-components" target="_blank" rel="noreferrer">unplugin-vue-components</a></li><li><a href="https://github.com/vuejs/core" target="_blank" rel="noreferrer">vue</a></li><li><a href="https://github.com/vitejs/vite" target="_blank" rel="noreferrer">vite</a></li><li><a href="https://github.com/antfu/vitesse" target="_blank" rel="noreferrer">vitesse</a></li><li><a href="https://github.com/antfu/vitesse-lite" target="_blank" rel="noreferrer">vitesse-lite</a></li><li><a href="https://github.com/demivan/fluent-vue" target="_blank" rel="noreferrer">fluent-vue</a></li><li><a href="https://github.com/vueuse/vueuse" target="_blank" rel="noreferrer">vueuse</a></li><li><a href="https://github.com/Saul-Mirone/milkdown" target="_blank" rel="noreferrer">milkdown</a></li><li><a href="https://github.com/iamyuu/gridjs-svelte" target="_blank" rel="noreferrer">gridjs-svelte</a></li><li><a href="https://github.com/okikio/spring-easing" target="_blank" rel="noreferrer">spring-easing</a></li><li><a href="https://github.com/bytedance/bytemd" target="_blank" rel="noreferrer">bytemd</a></li><li><a href="https://github.com/faker-js/faker" target="_blank" rel="noreferrer">faker</a></li><li><a href="https://github.com/aidenybai/million" target="_blank" rel="noreferrer">million</a></li><li><a href="https://github.com/wtchnm/Vitamin" target="_blank" rel="noreferrer">Vitamin</a></li><li><a href="https://github.com/PuruVJ/neodrag" target="_blank" rel="noreferrer">neodrag</a></li><li><a href="https://github.com/janosh/svelte-multiselect" target="_blank" rel="noreferrer">svelte-multiselect</a></li><li><a href="https://github.com/iconify/iconify" target="_blank" rel="noreferrer">iconify</a></li><li><a href="https://github.com/Tencent/tdesign-vue-next" target="_blank" rel="noreferrer">tdesign-vue-next</a></li><li><a href="https://github.com/Zhengqbbb/cz-git" target="_blank" rel="noreferrer">cz-git</a></li></ul><h2 id="使用未发布的功能" tabindex="-1">使用未发布的功能 <a class="header-anchor" href="#使用未发布的功能" aria-label="Permalink to “使用未发布的功能”">​</a></h2><p>主分支上的每个提交和带有 <code>cr-tracked</code> 标签的 PR 都会发布到 <a href="https://github.com/stackblitz-labs/pkg.pr.new" target="_blank" rel="noreferrer">pkg.pr.new</a>。你可以通过 <code>npm i https://pkg.pr.new/vitest@{commit}</code> 来安装它。</p><p>如果想在本地测试自己的修改，可以自行构建和链接（需要使用 <a href="https://pnpm.io/zh" target="_blank" rel="noreferrer">pnpm</a>）：</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/vitest-dev/vitest.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vitest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> packages/vitest</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> link</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 你可以使用你喜爱的任何包管理工具来设置这个步骤</span></span></code></pre></div><p>然后，回到你的 Vitest 项目并运行 <code>pnpm link --global vitest</code>（或者使用你的其他包管理工具来全局链接 <code>Vitest</code>）。</p><h2 id="社区" tabindex="-1">社区 <a class="header-anchor" href="#社区" aria-label="Permalink to “社区”">​</a></h2><p>如果你有疑问或者需要帮助，可以到 <a href="https://chat.vitest.dev" target="_blank" rel="noreferrer">Discord</a> 和 <a href="https://github.com/vitest-dev/vitest/discussions" target="_blank" rel="noreferrer">GitHub Discussions</a> 社区来寻求帮助。</p>`,53))])}const v=e(k,[["render",d]]);export{y as __pageData,v as default};
