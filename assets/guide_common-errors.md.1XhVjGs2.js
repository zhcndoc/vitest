import{_ as i,i as a,o as e,ar as t}from"./chunks/framework.lk4jPI36.js";const g=JSON.parse('{"title":"常见错误 | 指南","description":"","frontmatter":{"title":"常见错误 | 指南"},"headers":[],"relativePath":"guide/common-errors.md","filePath":"guide/common-errors.md","lastUpdated":1758986088000}'),n={name:"guide/common-errors.md"};function l(h,s,p,k,r,d){return e(),a("div",null,s[0]||(s[0]=[t(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /guide/common-errors.md for this page in Markdown format</div><h1 id="常见错误" tabindex="-1">常见错误 <a class="header-anchor" href="#常见错误" aria-label="Permalink to “常见错误”">​</a></h1><h2 id="cannot-find-module-relative-path" tabindex="-1">Cannot find module &#39;./relative-path&#39; <a class="header-anchor" href="#cannot-find-module-relative-path" aria-label="Permalink to “Cannot find module &#39;./relative-path&#39;”">​</a></h2><p>如果你收到一个 <strong>module cannot be found</strong> 的报错，则可能意味着几种不同情况：</p><ul><li>1.你拼错了路径。确保路径正确。</li><li>2.你可能依赖于 <code>tsconfig.json</code> 中的 <code>baseUrl</code>。默认情况下，Vite 不考虑 <code>tsconfig.json</code>，因此如果你依赖此行为，你可能需要自己安装 <a href="https://www.npmjs.com/package/vite-tsconfig-paths" target="_blank" rel="noreferrer"><code>vite-tsconfig-paths</code></a> 。</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tsconfigPaths </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vite-tsconfig-paths&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  plugins: [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tsconfigPaths</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>或者重写你的路径，使它不是相对于 root。</p><div class="language-diff"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">- import helpers from &#39;src/helpers&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+ import helpers from &#39;../src/helpers&#39;</span></span></code></pre></div><ul><li><ol start="3"><li>确保你没有使用相对路径的 <a href="/config/#alias">别名</a>。Vite 将它们视为相对于导入所在的文件而不是根目录。</li></ol></li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark has-diff" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alias: {</span></span>
<span class="line diff remove"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;@/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./src/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line diff add"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &#39;@/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./src/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.url).pathname, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="failed-to-terminate-worker" tabindex="-1">Failed to terminate worker <a class="header-anchor" href="#failed-to-terminate-worker" aria-label="Permalink to “Failed to terminate worker”">​</a></h2><p>当 NodeJS 的 fetch 与默认的 <a href="/config/#threads"><code>pool: &#39;threads&#39;</code></a> 一起使用时，可能会发生此错误。问题可以在 <a href="https://github.com/vitest-dev/vitest/issues/3077" target="_blank" rel="noreferrer">issue#3077</a> 上进行持续更新。</p><p>作为解决方法，我们可以切换到 <a href="/config/#forks"><code>pool: &#39;forks&#39;</code></a> 或 <a href="/config/#vmforks"><code>pool: &#39;vmForks&#39;</code></a>。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-48" id="tab-49" checked><label data-title="vitest.config.js" for="tab-49">vitest.config.js</label><input type="radio" name="group-48" id="tab-50"><label data-title="CLI" for="tab-50">CLI</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pool: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;forks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vitest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pool=forks</span></span></code></pre></div></div></div><h2 id="segfaults-and-native-code-errors" tabindex="-1">Segfaults and native code errors <a class="header-anchor" href="#segfaults-and-native-code-errors" aria-label="Permalink to “Segfaults and native code errors”">​</a></h2><p>运行 <a href="https://nodejs.org/api/addons.html" target="_blank" rel="noreferrer">原生 NodeJS 模块</a>在 <code>pool: &#39;threads&#39;</code> 中，可能会遇到来自原生代码的神秘错误。</p><ul><li><code>Segmentation fault (core dumped)</code></li><li><code>thread &#39;&lt;unnamed&gt;&#39; panicked at &#39;assertion failed</code></li><li><code>Abort trap: 6</code></li><li><code>internal error: entered unreachable code</code></li></ul><p>在这些情况下，原生模块可能不是为多线程安全而构建的。在解决方案中，你可以切换到 <code>pool: &#39;forks&#39;</code>，它在多个 <code>node:child_process</code> 而不是多个 <code>node:worker_threads</code> 中运行测试用例。</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-83" id="tab-84" checked><label data-title="vitest.config.js" for="tab-84">vitest.config.js</label><input type="radio" name="group-83" id="tab-85"><label data-title="CLI" for="tab-85">CLI</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { defineConfig } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;vitest/config&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> defineConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  test: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pool: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;forks&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vitest</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pool=forks</span></span></code></pre></div></div></div>`,19)]))}const c=i(n,[["render",l]]);export{g as __pageData,c as default};
